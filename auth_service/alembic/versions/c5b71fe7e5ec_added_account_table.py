"""Added account table

Revision ID: c5b71fe7e5ec
Revises: 
Create Date: 2023-03-10 15:56:59.298656

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c5b71fe7e5ec'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('social_user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.String(length=256), nullable=False),
    sa.Column('email', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('token',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('token', sa.String(length=128), nullable=False),
    sa.Column('token_type', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('login', sa.String(length=30), nullable=False),
    sa.Column('password', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('login')
    )
    op.create_table('auth_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('user_agent', sa.String(length=30), nullable=False),
    sa.Column('log_type', sa.String(length=30), nullable=True),
    sa.Column('datetime', sa.DateTime(), nullable=False),
    sa.Column('ip_address', sa.String(length=30), nullable=True),
    sa.Column('user_device_type', sa.Enum('WEB', 'MOBILE', 'SMART', name='userdevicetype'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'user_device_type'),
    sa.UniqueConstraint('id', 'user_device_type'),
    postgresql_partition_by='LIST (user_device_type)'
    )
    op.create_table('social_accounts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('social_id', sa.String(length=255), nullable=False),
    sa.Column('social_name', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('social_id', 'social_name', name='social_uc')
    )
    op.create_table('users_roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('role_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###

    op.execute(
        """CREATE TABLE IF NOT EXISTS "auth_logs_smart" PARTITION OF "auth_logs" FOR VALUES IN ('SMART')"""
    )
    op.execute(
        """CREATE TABLE IF NOT EXISTS "auth_logs_mobile" PARTITION OF "auth_logs" FOR VALUES IN ('MOBILE')""")
    op.execute(
        """CREATE TABLE IF NOT EXISTS "auth_logs_web" PARTITION OF "auth_logs" FOR VALUES IN ('WEB')""")


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_roles')
    op.drop_table('social_accounts')
    op.drop_table('auth_logs')
    op.drop_table('users')
    op.drop_table('token')
    op.drop_table('social_user')
    op.drop_table('roles')
    # ### end Alembic commands ###
